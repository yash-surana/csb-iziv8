{"version":3,"sources":["App.js","index.js"],"names":["emojiDictonary","emojisOnScreen","Object","keys","App","useState","emojiMeaning","setMeaning","className","style","backgroundColor","padding","onChange","event","userInput","target","value","undefined","placeholder","map","emoji","onClick","emojiClickHandler","cursor","fontSize","rootElement","document","getElementById","ReactDOM","render"],"mappings":"wKAMMA,EAAiB,CACrB,eAAM,WACN,eAAM,YACN,eAAM,wBACN,eAAM,eACN,eAAM,yBACN,eAAM,+BACN,eAAM,2BACN,eAAM,qBAGJC,EAAiBC,OAAOC,KAAKH,GAElB,SAASI,IACtB,IAAI,EAA6BC,mBAAS,IAA1C,mBAAKC,EAAL,KAAmBC,EAAnB,KA6BA,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIC,MAAO,CAAEC,gBA/CP,OA+C+BC,QAAS,QAA9C,SAhDY,oCAkDZ,uBACEC,SApBN,SAA2BC,GACzB,IAAIC,EAAYD,EAAME,OAAOC,MACzBV,EAAeN,EAAec,QAEbG,IAAjBX,IACFA,EAAe,sDAEjBC,EAAWD,IAcPY,YAAY,qBAGd,gDACCjB,EAAekB,KAAI,SAACC,GACnB,OACE,sBACEC,QAAS,kBAnBnB,SAA2BD,GAGzBb,EAAWP,EAAeoB,IAgBHE,CAAkBF,IAEjCX,MAAO,CAAEE,QAAS,SAAUY,OAAQ,UAAWC,SAAU,QAH3D,SAKGJ,GAHIA,MAOX,6BAAKd,OCjEX,IAAMmB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACzB,EAAD,MAEFqB,I","file":"static/js/main.bf87f42f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nvar headingText = \"Know which emoji you are using!\";\nvar color = \"blue\";\n\nconst emojiDictonary = {\n  \"üòÇ\": \"Laughing\",\n  \"üëç\": \"Thumps-Up\",\n  \"üôÇ\": \"Slightly smiling face\",\n  \"üòâ\": \"Winking face\",\n  \"üòá\": \"Smiling face with halo\",\n  \"üòç\": \"Smiling face with heart-eyes\",\n  \"üòú\": \"Winking face with tongue\",\n  \"ü§ê\": \"Zipper-mouth face\"\n};\n\nvar emojisOnScreen = Object.keys(emojiDictonary);\n\nexport default function App() {\n  var [emojiMeaning, setMeaning] = useState(\"\");\n\n  // function inputChangeHandler(event) {\n  //   //   // console.log(event.target);\n  //   console.log(event.target.value);\n  //   setUserInput(event.target.value);\n  // }\n  // function boxChecked(event) {\n  //   // alert(\"Checked\");\n  //   // document.write(\"Checked\");\n  //   // event.target.value = \"Checked\";\n  //   document.getElementById(\"box\").innerHTML = \"Checked\";\n  // }\n\n  function emojiInputHandler(event) {\n    var userInput = event.target.value;\n    var emojiMeaning = emojiDictonary[userInput];\n\n    if (emojiMeaning === undefined) {\n      emojiMeaning = \"We don't have this emoji in our database currently\";\n    }\n    setMeaning(emojiMeaning);\n  }\n  function emojiClickHandler(emoji) {\n    // console.log(emoji);\n    // var emojiMeaning = emojiDictonary[emoji];\n    setMeaning(emojiDictonary[emoji]);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 style={{ backgroundColor: color, padding: \"1rem\" }}>{headingText}</h1>\n\n      <input\n        onChange={emojiInputHandler}\n        placeholder=\"Enter your emoji\"\n      ></input>\n\n      <h3>Emojis We Know</h3>\n      {emojisOnScreen.map((emoji) => {\n        return (\n          <span\n            onClick={() => emojiClickHandler(emoji)}\n            key={emoji}\n            style={{ padding: \"0.5rem\", cursor: \"pointer\", fontSize: \"2rem\" }}\n          >\n            {emoji}\n          </span>\n        );\n      })}\n      <h2>{emojiMeaning}</h2>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}